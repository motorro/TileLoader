<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="726" height="335">
	<fx:Script>
		<![CDATA[
			import cmodule.aircall.CLibInit;
			
			import tileloader.resize.BenderImageResizer;
			import tileloader.resize.BenderLosslessImageRotator;
			import tileloader.resize.ImageFitType;
			import tileloader.resize.ResizeJob;
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:ArrayList id="fitData">
			<fx:Object label="IMAGE" data="{ImageFitType.FIT_IMAGE}"/>
			<fx:Object label="WINDOW" data="{ImageFitType.FIT_WINDOW}"/>
		</s:ArrayList>
	</fx:Declarations>
	<s:Image id="source" x="10" y="10" width="403" height="313"
			 source="@Embed('../assets/Jellyfish.jpg')"/>
	<s:TextInput id="w" x="421" y="10" text="180"/>
	<s:TextInput id="h" x="421" y="40" text="180"/>
	<s:ComboBox id="scale" x="421" y="70" width="128" dataProvider="{fitData}" selectedIndex="0"/>
	<s:Button x="421" y="101" label="resize">
		<s:click>
			<![CDATA[
				var numOfResize:int = Math.floor(source.bitmapData.width / Number(w.text)) / 2;
			
				var src:BitmapData = source.bitmapData;
				var job:ResizeJob;			

				var angle:String = String(a.text);
				if (angle) {
					job = BenderLosslessImageRotator.rotate(src, angle);
					trace ("Rotating to: " + job.output.width + "x" + job.output.height);
					job.job.start(true);
					src = job.output;
				}
							
//				while (--numOfResize >= 0) {
//					job = BenderImageResizer.resize(src, Math.floor(src.width / 2), Math.floor(src.height / 2), scale.selectedItem.data);
//					trace ("Resizing to: " + job.output.width + "x" + job.output.height);
//					job.job.start(true);
//					src = job.output;
//				}	

				job = BenderImageResizer.resize(src, Number(w.text), Number(h.text), scale.selectedItem.data);
				trace ("Resizing to: " + job.output.width + "x" + job.output.height);
				
			
				job.job.start(true);
	
			
				result.source = new Bitmap(job.output);
			]]>
		</s:click>
	</s:Button>
	<s:Image id="result" x="421" y="130" width="180" height="180" scaleMode="letterbox" fillMode="clip"/>
	<s:Button x="499" y="101" label="save">
		<s:click>
			<![CDATA[
				var libInit:CLibInit = new CLibInit();
				var jpeginit:Object = libInit.init();
			
				var origBmp:BitmapData = Bitmap(result.source).bitmapData;
				var imgData:ByteArray = origBmp.getPixels(origBmp.rect);
				var resData:ByteArray = new ByteArray();
				imgData.position = 0;
				
				var encodeComplete:Function = function():void {
					trace("COMPLETE");
					var file:File = File.applicationStorageDirectory.resolvePath("img.jpg");
					var fs:FileStream = new FileStream();
					fs.open(file, FileMode.WRITE);
					fs.writeBytes(resData, 0, resData.length);
					fs.close();
				}
			
				jpeginit.encodeAsync(encodeComplete, imgData, resData, int(w.text), int(h.text), 100, 10);
			]]>
		</s:click>
	</s:Button>
	<s:TextInput id="a" x="557" y="10" text="90"/>
</s:WindowedApplication>
