<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:parsley="http://www.spicefactory.org/parsley"
					   xmlns:log="tileloader.log.*"
					   xmlns:view="tileloader.view.*"
					   width="422" height="450" 
					   showStatusBar="false" 
					   preinitialize="onPreinit();"
					   applicationComplete="onAppComplete()">
	<fx:Metadata> 
		[ResourceBundle("interface")] 
	</fx:Metadata>	<fx:Script>
		<![CDATA[
			import mx.logging.ILogger;
			import mx.logging.Log;
			
			import tileloader.context.ApplicationContext;
			import tileloader.log.LogUtils;
			import tileloader.model.SharedModel;
			
			[Bindable]
			public var model:SharedModel;
			
			/**
			 * @private
			 * Preinitialization
			 */
			private function onPreinit():void {
				Log.addTarget(logTarget);
			}
			
			/**
			 * @private
			 * Global exception handler attachment
			 */
			private function onAppComplete():void {
				loaderInfo.uncaughtErrorEvents.addEventListener(UncaughtErrorEvent.UNCAUGHT_ERROR, onGlobalError);
			}
			
			/**
			 * @private
			 * Global exception handler
			 */
			private function onGlobalError(event:UncaughtErrorEvent):void {
				var logger:ILogger = LogUtils.getLoggerByObject(this);
				if (false == logger) return;
				
				if (event.error is Error){
					var error:Error = event.error as Error;
					logger.error(error.message);
				} else if (event.error is ErrorEvent) {
					var errorEvent:ErrorEvent = event.error as ErrorEvent;
					logger.error(errorEvent.text);
				} else {
					logger.error(error.toString());
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<log:ParsleyMessageLogTarget
			id="logTarget"
			includeDate="false"
			includeTime="true"
			includeCategory="true"
			includeLevel="true">
			<log:filters>
				<fx:Array>
					<fx:String>tileloader.*</fx:String>
				</fx:Array>
			</log:filters>
		</log:ParsleyMessageLogTarget>

		<parsley:ContextBuilder>
			<parsley:FlexConfig type="{ApplicationContext}"/>
			<parsley:TaskCommandSupport/>                    
		</parsley:ContextBuilder>
		
		<parsley:Configure targets="{[logTarget]}"/>
		
		<parsley:FastInject property="model" type="{SharedModel}"/> 
		
	</fx:Declarations>
	<view:DropZone left="10" right="10" top="10" bottom="40" contentBackgroundAlpha="0.6"
				   contentBackgroundColor="#D2F0F9" enabled="{model.initialized}">
	</view:DropZone>
	<s:Button x="10" y="418" width="400" label="@Resource(key='btnUploadCaption', bundle='interface')">
		<s:click>
			<![CDATA[
				model.startUpload();
			]]>
		</s:click>
	</s:Button>
</s:WindowedApplication>
